{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputList","setInputList","Items","setItems","className","class","Input","value","type","placeholder","onChange","event","target","IconButton","color","onClick","oldItems","fontSize","map","itemval","index","id","filter","arrElem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA2EeA,MArEf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAiBA,OACE,mCACE,qBAAKC,UAAU,OAAf,SACE,sBAAKC,MAAM,SAAX,UACE,4CACA,cAACC,EAAA,EAAD,CACEC,MAAOP,EACPQ,KAAK,OACLC,YAAY,gBACZL,UAAU,OACVM,SA1BO,SAACC,GACZV,EAAaU,EAAMC,OAAOL,UA2BxB,sBAAMH,UAAU,OAAhB,SACE,cAACS,EAAA,EAAD,CACE,aAAW,MACXC,MAAM,UACNV,UAAU,OACVW,QA9BK,WACXZ,GAAS,SAACa,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAoBhB,OAEtBC,EAAa,KAsBT,SAME,cAAC,IAAD,CAAegB,SAAS,QAAQb,UAAU,YAG9C,6BACGF,EAAMgB,KAAI,SAACC,EAAQC,GAClB,OACE,+BACE,cAACP,EAAA,EAAD,CACE,aAAW,SACXC,MAAM,UACNV,UAAU,QACViB,GAAMD,EAENL,QAAU,WAvCT,IAACM,IAwCYD,EAvC1BjB,GAAS,SAACa,GACR,OAAOA,EAASM,QAAO,SAACC,EAAQH,GAC5B,OAAOA,IAAUC,SA8Bb,SAUE,cAAC,IAAD,CAAYJ,SAAS,WALfG,GAOPD,kBCnDJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.308f771f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./App.css\";\nfunction App() {\n  const [inputList, setInputList] = useState(\"\");\n  const [Items,setItems] = useState([]);\n  const itemEvent =(event)=>{\n        setInputList(event.target.value);\n  }\n  const listOfItem=()=>{\n        setItems((oldItems) =>{\n          return [...oldItems,inputList];\n        });\n        setInputList(\"\");\n  }\n  const deleteItems =(id)=>{\n        setItems((oldItems)=>{\n          return oldItems.filter((arrElem,index)=> {\n              return index !== id;\n          })\n        })\n  }\n  return (\n    <>\n      <div className=\"main\">\n        <div class=\"center\">\n          <h1>To Do List</h1>\n          <Input\n            value={inputList}\n            type=\"text\"\n            placeholder=\"Add your Task\"\n            className=\"task\"\n            onChange={itemEvent}\n          />\n          <span className=\"icon\">\n            <IconButton\n              aria-label=\"add\"\n              color=\"primary\"\n              className=\"icon\"\n              onClick={listOfItem}\n            >\n              <AddCircleIcon fontSize=\"large\" className=\"add\" />\n            </IconButton>\n          </span>\n          <ol>\n            {Items.map((itemval,index) => {\n              return (\n                <li>\n                  <IconButton\n                    aria-label=\"cancel\"\n                    color=\"primary\"\n                    className=\"icon1\"\n                    id = {index}\n                    key ={index}\n                    onClick ={()=>{\n                      deleteItems(index);\n                    }}\n                  >\n                    <CancelIcon fontSize=\"large\" />\n                  </IconButton>\n                  {itemval}\n                </li>\n              );\n            })}\n           \n          </ol>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}